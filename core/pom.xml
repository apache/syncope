<?xml version="1.0" encoding="UTF-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
>

   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.apache.syncope</groupId>
      <artifactId>syncope</artifactId>
      <version>1.1.0-cxf-SNAPSHOT</version>
   </parent>

   <name>Apache Syncope Core</name>
   <description>Apache Syncope Core</description>

   <groupId>org.apache.syncope</groupId>
   <artifactId>syncope-core</artifactId>
   <packaging>war</packaging>

   <distributionManagement>
      <site>
         <id>syncope.website</id>
         <name>Apache Syncope website</name>
         <url>${site.deploymentBaseUrl}/${project.artifactId}</url>
      </site>
   </distributionManagement>

   <properties>
      <jdbcdriver.groupId>com.h2database</jdbcdriver.groupId>
      <jdbcdriver.artifactId>h2</jdbcdriver.artifactId>

      <javaagent />
   </properties>

   <dependencies>

      <dependency>
         <groupId>org.apache.syncope</groupId>
         <artifactId>syncope-common</artifactId>
         <version>${project.version}</version>
      </dependency>

      <dependency>
         <groupId>javax.ws.rs</groupId>
         <artifactId>javax.ws.rs-api</artifactId>
      </dependency>
      <dependency>
         <groupId>org.apache.cxf</groupId>
         <artifactId>cxf-rt-frontend-jaxrs</artifactId>
      </dependency>
      <dependency>
         <groupId>org.apache.cxf</groupId>
         <artifactId>cxf-rt-rs-extension-providers</artifactId>
      </dependency>
      <dependency>
         <groupId>org.apache.cxf</groupId>
         <artifactId>cxf-rt-rs-extension-search</artifactId>
      </dependency>
      <dependency>
         <groupId>org.apache.cxf</groupId>
         <artifactId>cxf-rt-frontend-jaxws</artifactId>
      </dependency>
      <dependency>
         <groupId>org.codehaus.jettison</groupId>
         <artifactId>jettison</artifactId>
      </dependency>

      <dependency>
         <groupId>javax.servlet</groupId>
         <artifactId>servlet-api</artifactId>
      </dependency>
      <dependency>
         <groupId>javax.servlet.jsp</groupId>
         <artifactId>jsp-api</artifactId>
      </dependency>
      <dependency>
         <groupId>javax.servlet</groupId>
         <artifactId>jstl</artifactId>
      </dependency>

      <dependency>
         <groupId>org.apache.geronimo.specs</groupId>
         <artifactId>geronimo-javamail_1.4_spec</artifactId>
      </dependency>
      <dependency>
         <groupId>org.apache.geronimo.javamail</groupId>
         <artifactId>geronimo-javamail_1.4_provider</artifactId>
      </dependency>

      <dependency>
         <groupId>org.apache.commons</groupId>
         <artifactId>commons-jexl</artifactId>
      </dependency>

      <dependency>
         <groupId>org.activiti</groupId>
         <artifactId>activiti-engine</artifactId>
      </dependency>
      <dependency>
         <groupId>org.activiti</groupId>
         <artifactId>activiti-spring</artifactId>
      </dependency>

      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-core</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-beans</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-context</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-context-support</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-asm</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-aop</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-tx</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-jdbc</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-orm</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-web</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-webmvc</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-oxm</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-expression</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework.security</groupId>
         <artifactId>spring-security-core</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework.security</groupId>
         <artifactId>spring-security-web</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework.security</groupId>
         <artifactId>spring-security-config</artifactId>
      </dependency>

      <dependency>
         <groupId>cglib</groupId>
         <artifactId>cglib</artifactId>
      </dependency>

      <dependency>
         <groupId>org.aspectj</groupId>
         <artifactId>aspectjrt</artifactId>
      </dependency>
      <dependency>
         <groupId>org.aspectj</groupId>
         <artifactId>aspectjweaver</artifactId>
      </dependency>

      <dependency>
         <groupId>com.thoughtworks.xstream</groupId>
         <artifactId>xstream</artifactId>
      </dependency>

      <dependency>
         <groupId>org.apache.velocity</groupId>
         <artifactId>velocity</artifactId>
      </dependency>

      <dependency>
         <groupId>org.quartz-scheduler</groupId>
         <artifactId>quartz</artifactId>
      </dependency>
      <dependency>
         <groupId>org.quartz-scheduler</groupId>
         <artifactId>quartz-oracle</artifactId>
      </dependency>

      <dependency>
         <groupId>org.apache.cocoon.sax</groupId>
         <artifactId>cocoon-sax</artifactId>
      </dependency>
      <dependency>
         <groupId>org.apache.cocoon.optional</groupId>
         <artifactId>cocoon-optional</artifactId>
      </dependency>

      <dependency>
         <groupId>org.apache.xmlgraphics</groupId>
         <artifactId>fop</artifactId>
      </dependency>

      <dependency>
         <groupId>org.apache.geronimo.specs</groupId>
         <artifactId>geronimo-jpa_2.0_spec</artifactId>
      </dependency>
      <dependency>
         <groupId>org.apache.openjpa</groupId>
         <artifactId>openjpa</artifactId>
      </dependency>
      <dependency>
         <groupId>org.apache.openjpa</groupId>
         <artifactId>openjpa-jdbc</artifactId>
      </dependency>
      <dependency>
         <groupId>org.apache.openjpa</groupId>
         <artifactId>openjpa-persistence-jdbc</artifactId>
      </dependency>

      <dependency>
         <groupId>javax.validation</groupId>
         <artifactId>validation-api</artifactId>
      </dependency>
      <dependency>
         <groupId>org.apache.bval</groupId>
         <artifactId>bval-jsr303</artifactId>
      </dependency>

      <dependency>
         <groupId>org.codehaus.groovy</groupId>
         <artifactId>groovy-all</artifactId>
      </dependency>

      <dependency>
         <groupId>org.slf4j</groupId>
         <artifactId>slf4j-api</artifactId>
      </dependency>
      <dependency>
         <groupId>ch.qos.logback</groupId>
         <artifactId>logback-core</artifactId>
      </dependency>
      <dependency>
         <groupId>ch.qos.logback</groupId>
         <artifactId>logback-classic</artifactId>
      </dependency>
      <dependency>
         <groupId>commons-logging</groupId>
         <artifactId>commons-logging</artifactId>
      </dependency>
      <dependency>
         <groupId>org.slf4j</groupId>
         <artifactId>jcl-over-slf4j</artifactId>
      </dependency>

      <dependency>
         <groupId>org.connid</groupId>
         <artifactId>framework</artifactId>
      </dependency>
      <dependency>
         <groupId>org.connid</groupId>
         <artifactId>framework-internal</artifactId>
      </dependency>

      <dependency>
         <groupId>org.jasypt</groupId>
         <artifactId>jasypt</artifactId>
         <version>${jasypt.version}</version>
      </dependency> 

    <!-- TEST -->
      <dependency>
         <groupId>org.apache.syncope</groupId>
         <artifactId>syncope-client</artifactId>
         <version>${project.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.apache.syncope</groupId>
         <artifactId>syncope-build-tools</artifactId>
         <version>${project.version}</version>
         <type>war</type>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.connid.bundles.soap</groupId>
         <artifactId>org.connid.bundles.soap</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.connid.bundles.soap</groupId>
         <artifactId>wssample</artifactId>
         <type>war</type>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.connid.bundles.db</groupId>
         <artifactId>org.connid.bundles.db.table</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.connid.bundles</groupId>
         <artifactId>org.connid.bundles.csvdir</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.connid.bundles</groupId>
         <artifactId>org.connid.bundles.ldap</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>junit</groupId>
         <artifactId>junit</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>com.h2database</groupId>
         <artifactId>h2</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.apache.httpcomponents</groupId>
         <artifactId>httpclient</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-test</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>com.icegreen</groupId>
         <artifactId>greenmail</artifactId>
         <scope>test</scope>
      </dependency>
    <!-- /TEST -->
   </dependencies>

   <build>
      <finalName>${project.parent.artifactId}</finalName>

      <plugins>

         <plugin>
            <groupId>org.apache.openjpa</groupId>
            <artifactId>openjpa-maven-plugin</artifactId>
            <inherited>true</inherited>
            <dependencies>
               <dependency>
                  <groupId>com.h2database</groupId>
                  <artifactId>h2</artifactId>
                  <version>${h2.version}</version>
               </dependency>
            </dependencies>
            <configuration>
               <persistenceXmlFile>${project.basedir}/src/main/resources/META-INF/spring-persistence.xml</persistenceXmlFile>
               <includes>org/apache/syncope/core/persistence/beans/**/*.class</includes>
               <connectionDriverName>org.springframework.jdbc.datasource.DriverManagerDataSource</connectionDriverName>
               <connectionProperties>
                  driverClassName=org.h2.Driver,
                  url=jdbc:h2:mem:syncopedb
                  username=sa,
                  password=
               </connectionProperties>
            </configuration>
            <executions>
               <execution>
                  <id>enhancer</id>
                  <phase>process-classes</phase>
                  <goals>
                     <goal>enhance</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>

         <plugin>
            <groupId>org.codehaus.gmaven</groupId>
            <artifactId>gmaven-plugin</artifactId>
            <inherited>true</inherited>
            <executions>
               <execution>
                  <phase>generate-resources</phase>
                  <goals>
                     <goal>execute</goal>
                  </goals>
                  <configuration>
                     <source>
                        project.properties['urlencoded.csvdir.path'] =
                        java.net.URLEncoder.encode(project.properties['test.csvdir.path'])
                     </source>
                  </configuration>
               </execution>
            </executions>
         </plugin>

         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <inherited>true</inherited>
            <executions>
               <execution>
                  <id>set-bundles</id>
                  <phase>process-test-resources</phase>
                  <goals>
                     <goal>copy</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>

         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <inherited>true</inherited>
            <executions>
               <execution>
                  <id>verify</id>
                  <goals>
                     <goal>verify</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>

         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <inherited>true</inherited>
            <executions>
               <execution>
                  <id>explodeSyncopeWAR</id>
                  <phase>pre-integration-test</phase>
                  <configuration>
                     <target>
                        <unzip src="${project.build.directory}/${project.build.finalName}.war"
                           dest="${cargo.run.dir}"
                        >
                           <patternset>
                              <exclude name="**/content.xml" />
                              <exclude name="**/persistence.properties" />
                              <exclude name="**/security.properties" />
                              <exclude name="**/workflow.properties" />
                           </patternset>
                        </unzip>
                        <copy
                           file="${project.build.directory}/test-classes/org/apache/syncope/core/quartz/TestSyncActions.class"
                           todir="${cargo.run.dir}/WEB-INF/classes/org/apache/syncope/core/quartz" />
                        <copy file="${project.build.directory}/test-classes/db.jsp" todir="${cargo.run.dir}" />
                        <copy todir="${cargo.run.dir}/WEB-INF/classes" includeEmptyDirs="false">
                           <fileset dir="${project.build.directory}/test-classes">
                              <exclude name="**/*.class" />
                              <exclude name="restClientContext.xml" />
                           </fileset>
                        </copy>
                     </target>
                  </configuration>
                  <goals>
                     <goal>run</goal>
                  </goals>
               </execution>
               <execution>
                  <id>setupCSV</id>
                  <phase>pre-integration-test</phase>
                  <configuration>
                     <target>
                        <copy file="${project.build.directory}/test-classes/test.csv" todir="${test.csvdir.path}"
                           overwrite="true" />
                     </target>
                  </configuration>
                  <goals>
                     <goal>run</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>

         <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven2-plugin</artifactId>
            <inherited>true</inherited>
            <configuration>
               <container>
                  <dependencies>
                     <dependency>
                        <groupId>com.h2database</groupId>
                        <artifactId>h2</artifactId>
                     </dependency>
                     <dependency>
                        <groupId>${jdbcdriver.groupId}</groupId>
                        <artifactId>${jdbcdriver.artifactId}</artifactId>
                     </dependency>
                  </dependencies>
               </container>
               <configuration>
                  <type>standalone</type>
                  <properties>
                     <cargo.servlet.port>${cargo.servlet.port}</cargo.servlet.port>
                     <cargo.tomcat.ajp.port>${cargo.tomcat.ajp.port}</cargo.tomcat.ajp.port>
                     <cargo.rmi.port>${cargo.rmi.port}</cargo.rmi.port>

              <!--<cargo.jvmargs>-Xdebug -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n</cargo.jvmargs>-->
                     <cargo.jvmargs>-noverify ${javaagent} -Drebel.spring_plugin=false
                        -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC -XX:MaxPermSize=256m</cargo.jvmargs>
                  </properties>
                  <configfiles>
                     <configfile>
                        <file>${project.build.directory}/test-classes/context.xml</file>
                        <todir>conf/</todir>
                        <tofile>context.xml</tofile>
                     </configfile>
                  </configfiles>
               </configuration>
               <deployables>
                  <deployable>
                     <location>${cargo.run.dir}</location>
                     <pingURL>http://localhost:${cargo.servlet.port}/syncope/rest/schema/user/list.xml</pingURL>
                     <pingTimeout>60000</pingTimeout>
                     <properties>
                        <context>syncope</context>
                     </properties>
                  </deployable>
                  <deployable>
                     <groupId>org.connid.bundles.soap</groupId>
                     <artifactId>wssample</artifactId>
                     <type>war</type>
                     <properties>
                        <context>wssample</context>
                     </properties>
                  </deployable>
                  <deployable>
                     <groupId>org.apache.syncope</groupId>
                     <artifactId>syncope-build-tools</artifactId>
                     <type>war</type>
                     <properties>
                        <context>syncope-build-tools</context>
                     </properties>
                  </deployable>
               </deployables>
            </configuration>
            <executions>
               <execution>
                  <id>start-container</id>
                  <phase>pre-integration-test</phase>
                  <goals>
                     <goal>start</goal>
                  </goals>
               </execution>
               <execution>
                  <id>stop-container</id>
                  <phase>post-integration-test</phase>
                  <goals>
                     <goal>stop</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>

         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
         </plugin>

         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-pmd-plugin</artifactId>
         </plugin>

         <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <executions>
               <execution>
                  <id>bundle-manifest</id>
                  <phase>process-classes</phase>
                  <goals>
                     <goal>manifest</goal>
                  </goals>
                  <configuration>
                     <instructions>
                        <Bundle-Name>${project.name}</Bundle-Name>
                        <Bundle-SymbolicName>org.apache.syncope.core</Bundle-SymbolicName>
                        <Bundle-Version>${project.version}</Bundle-Version>
                        <Export-Package>
                           org.apache.syncope.core*;version=${project.version};-split-package:=merge-first
                        </Export-Package>
                        <Import-Package>
                           javax.annotation,
                           javax.crypto*,
                           javax.mail.internet,
                           javax.naming,
                           javax.persistence,
                           javax.rmi,
                           javax.servlet*,
                           javax.sql,
                           javax.validation*,
                           javax.xml*,
                           org.w3c.dom,
                           org.xml.sax*,
                           org.activiti*;version="[5,6)",
                           org.apache.cocoon*;version="[2,4)",
                           org.apache.commons.collections.keyvalue;version="[3.2,4)",
                           org.apache.commons.io;version="[1.3,2)",
                           org.apache.commons.jexl2*;version="[2.1,3)",
                           org.apache.commons.lang*;version="[2.6,3)",
                           org.apache.openjpa*;version="[2,3)",
                           org.apache.syncope.client*;version=${project.version},
                           org.apache.syncope.types;version=${project.version},
                           org.apache.velocity*;version="[1.7,2)",
                           org.aspectj.lang*;version="[1.7,2)",
                           org.codehaus.jackson*;version="[1.9,2)",
                           org.jasypt.digest;version="[1.9,2)",
                           org.quartz*;version="[1.8,2)",
                           org.springframework*;version="[3,4)",
                           ch.qos.logback*;resolution:=optional,
                           org.identityconnectors*;resolution:=optional,
                           org.slf4j;resolution:=optional
                        </Import-Package>
                     </instructions>
                  </configuration>
               </execution>
            </executions>
         </plugin>

         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <configuration>
               <archive>
                  <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
               </archive>
            </configuration>
         </plugin>
      </plugins>

      <resources>
         <resource>
            <directory>src/main/resources</directory>
            <filtering>true</filtering>
         </resource>
         <resource>
            <directory>..</directory>
            <targetPath>META-INF</targetPath>
            <includes>
               <include>LICENSE</include>
               <include>NOTICE</include>
               <include>DISCLAIMER</include>
            </includes>
         </resource>
      </resources>

      <testResources>
         <testResource>
            <directory>src/test/resources</directory>
            <filtering>true</filtering>
            <excludes>
               <exclude>oracle/**</exclude>
               <exclude>postgres/**</exclude>
               <exclude>mysql/**</exclude>
               <exclude>sqlserver/**</exclude>
               <exclude>jboss/**</exclude>
            </excludes>
         </testResource>
      </testResources>
   </build>

   <profiles>

      <profile>
         <id>dev</id>
         <properties>
            <waitForCheck>true</waitForCheck>
            <javaagent />
         </properties>
         <build>
            <defaultGoal>clean verify</defaultGoal>

            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <inherited>true</inherited>
                  <configuration>
                     <skip>true</skip>
                  </configuration>
               </plugin>

               <plugin>
                  <groupId>org.codehaus.cargo</groupId>
                  <artifactId>cargo-maven2-plugin</artifactId>
                  <inherited>true</inherited>
                  <configuration>
                     <wait>${waitForCheck}</wait>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>

      <profile>
         <id>jrebel</id>
         <properties>
            <skipTests>true</skipTests>
            <javaagent>-javaagent:${env.REBEL_HOME}/jrebel.jar</javaagent>
            <waitForCheck>true</waitForCheck>
         </properties>
         <build>
            <defaultGoal>clean verify</defaultGoal>

            <plugins>
               <plugin>
                  <groupId>org.zeroturnaround</groupId>
                  <artifactId>jrebel-maven-plugin</artifactId>
                  <inherited>true</inherited>
                  <configuration>
                     <classpath>
                        <resources>
                           <resource>
                              <excludes>
                                 <exclude>content.xml</exclude>
                                 <exclude>persistence.properties</exclude>
                                 <exclude>security.properties</exclude>
                                 <exclude>workflow.properties</exclude>
                              </excludes>
                           </resource>
                        </resources>
                     </classpath>
                  </configuration>
                  <executions>
                     <execution>
                        <id>generate-rebel-xml</id>
                        <phase>process-resources</phase>
                        <goals>
                           <goal>generate</goal>
                        </goals>
                     </execution>
                  </executions>
               </plugin>

               <plugin>
                  <groupId>org.codehaus.cargo</groupId>
                  <artifactId>cargo-maven2-plugin</artifactId>
                  <inherited>true</inherited>
                  <configuration>
                     <wait>${waitForCheck}</wait>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>

      <profile>
         <id>oracle-it</id>
         <properties>
            <jdbcdriver.groupId>com.oracle</jdbcdriver.groupId>
            <jdbcdriver.artifactId>ojdbc6</jdbcdriver.artifactId>
            <javaagent />
         </properties>
         <dependencies>
            <dependency>
               <groupId>com.oracle</groupId>
               <artifactId>ojdbc6</artifactId>
               <version>11.1.0</version>
               <scope>test</scope>
            </dependency>
         </dependencies>
         <build>
            <defaultGoal>clean verify</defaultGoal>

            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-antrun-plugin</artifactId>
                  <inherited>true</inherited>
                  <executions>
                     <execution>
                        <id>set-oracle</id>
                        <phase>process-test-resources</phase>
                        <configuration>
                           <target>
                              <copy tofile="${project.build.directory}/classes/META-INF/orm.xml"
                                 file="${basedir}/src/main/resources/META-INF/orm.xml.oracle"
                                 overwrite="true" />
                           </target>
                        </configuration>
                        <goals>
                           <goal>run</goal>
                        </goals>
                     </execution>
                  </executions>
               </plugin>
            </plugins>

            <testResources>
               <testResource>
                  <directory>src/test/resources</directory>
                  <filtering>true</filtering>
                  <excludes>
                     <exclude>persistence.properties</exclude>
                  </excludes>
               </testResource>
               <testResource>
                  <directory>src/test/resources/oracle</directory>
                  <filtering>true</filtering>
               </testResource>
            </testResources>
         </build>
      </profile>

      <profile>
         <id>noopworkflow</id>
         <properties>
            <javaagent />
         </properties>
         <build>
            <defaultGoal>clean verify</defaultGoal>

            <plugins>

               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-antrun-plugin</artifactId>
                  <inherited>true</inherited>
                  <executions>
                     <execution>
                        <id>remove-activiti</id>
                        <phase>process-test-resources</phase>
                        <configuration>
                           <target>
                              <copy tofile="${project.build.directory}/classes/workflowContext.xml"
                                 file="${basedir}/src/test/resources/noopworkflow/workflowContext.xml"
                                 overwrite="true" />
                           </target>
                        </configuration>
                        <goals>
                           <goal>run</goal>
                        </goals>
                     </execution>
                  </executions>
               </plugin>
          
          <!-- Strip Activiti-related entries from content.xml -->
               <plugin>
                  <groupId>org.codehaus.mojo</groupId>
                  <artifactId>xml-maven-plugin</artifactId>
                  <inherited>true</inherited>
                  <executions>
                     <execution>
                        <phase>process-test-resources</phase>
                        <goals>
                           <goal>transform</goal>
                        </goals>
                     </execution>
                  </executions>
                  <configuration>
                     <forceCreation>true</forceCreation>
                     <transformationSets>
                        <transformationSet>
                           <dir>${project.build.directory}/test-classes</dir>
                           <includes>
                              <include>content.xml</include>
                           </includes>
                           <outputDir>${project.build.directory}/test-classes/</outputDir>
                           <stylesheet>${basedir}/src/test/resources/noopworkflow/stripActivitiFromContent.xsl</stylesheet>
                           <outputProperties>
                              <outputProperty>
                                 <name>indent</name>
                                 <value>yes</value>
                              </outputProperty>
                           </outputProperties>
                        </transformationSet>
                     </transformationSets>
                  </configuration>
               </plugin>

            </plugins>

            <testResources>
               <testResource>
                  <directory>src/test/resources</directory>
                  <filtering>true</filtering>
                  <excludes>
                     <exclude>workflow.properties</exclude>
                  </excludes>
               </testResource>
               <testResource>
                  <directory>src/test/resources/noopworkflow</directory>
                  <filtering>true</filtering>
               </testResource>
            </testResources>
         </build>
      </profile>

      <profile>
         <id>sqlserver-it</id>
         <properties>
            <jdbcdriver.groupId>com.microsoft.sqlserver</jdbcdriver.groupId>
            <jdbcdriver.artifactId>sqljdbc4</jdbcdriver.artifactId>
            <javaagent />
         </properties>
         <dependencies>
            <dependency>
               <groupId>com.microsoft.sqlserver</groupId>
               <artifactId>sqljdbc4</artifactId>
               <version>4.0</version>
               <scope>test</scope>
            </dependency>
         </dependencies>
         <build>
            <defaultGoal>clean verify</defaultGoal>

            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-antrun-plugin</artifactId>
                  <inherited>true</inherited>
                  <executions>
                     <execution>
                        <id>set-sqlserver</id>
                        <phase>process-test-resources</phase>
                        <configuration>
                           <target>
                              <copy tofile="${project.build.directory}/classes/META-INF/orm.xml"
                                 file="${basedir}/src/main/resources/META-INF/orm.xml.sqlserver"
                                 overwrite="true" />
                           </target>
                        </configuration>
                        <goals>
                           <goal>run</goal>
                        </goals>
                     </execution>
                  </executions>
               </plugin>
            </plugins>

            <testResources>
               <testResource>
                  <directory>src/test/resources</directory>
                  <filtering>true</filtering>
                  <excludes>
                     <exclude>persistence.properties</exclude>
                  </excludes>
               </testResource>
               <testResource>
                  <directory>src/test/resources/sqlserver</directory>
                  <filtering>true</filtering>
               </testResource>
            </testResources>
         </build>
      </profile>

      <profile>
         <id>postgres-it</id>
         <properties>
            <jdbcdriver.groupId>postgresql</jdbcdriver.groupId>
            <jdbcdriver.artifactId>postgresql</jdbcdriver.artifactId>
            <javaagent />
         </properties>
         <dependencies>
            <dependency>
               <groupId>postgresql</groupId>
               <artifactId>postgresql</artifactId>
               <version>9.1-901-1.jdbc4</version>
               <scope>test</scope>
            </dependency>
         </dependencies>
         <build>
            <defaultGoal>clean verify</defaultGoal>

            <testResources>
               <testResource>
                  <directory>src/test/resources</directory>
                  <filtering>true</filtering>
                  <excludes>
                     <exclude>persistence.properties</exclude>
                  </excludes>
               </testResource>
               <testResource>
                  <directory>src/test/resources/postgres</directory>
                  <filtering>true</filtering>
               </testResource>
            </testResources>
         </build>
      </profile>

      <profile>
         <id>mysql-it</id>
         <properties>
            <jdbcdriver.groupId>mysql</jdbcdriver.groupId>
            <jdbcdriver.artifactId>mysql-connector-java</jdbcdriver.artifactId>
            <javaagent />
         </properties>
         <dependencies>
            <dependency>
               <groupId>mysql</groupId>
               <artifactId>mysql-connector-java</artifactId>
               <version>5.1.21</version>
               <scope>test</scope>
            </dependency>
         </dependencies>
         <build>
            <defaultGoal>clean verify</defaultGoal>

            <testResources>
               <testResource>
                  <directory>src/test/resources</directory>
                  <filtering>true</filtering>
                  <excludes>
                     <exclude>persistence.properties</exclude>
                  </excludes>
               </testResource>
               <testResource>
                  <directory>src/test/resources/mysql</directory>
                  <filtering>true</filtering>
               </testResource>
            </testResources>
         </build>
      </profile>

      <profile>
         <id>glassfish-it</id>

         <dependencies>
            <dependency>
               <groupId>com.h2database</groupId>
               <artifactId>h2</artifactId>
            </dependency>
         </dependencies>

         <build>
            <defaultGoal>clean verify</defaultGoal>

            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <inherited>true</inherited>
                  <configuration>
                     <skipTests>true</skipTests>
                  </configuration>
               </plugin>

               <plugin>
                  <groupId>org.codehaus.cargo</groupId>
                  <artifactId>cargo-maven2-plugin</artifactId>
                  <inherited>true</inherited>
                  <configuration>
                     <container>
                        <containerId>glassfish3x</containerId>
                        <zipUrlInstaller>
                           <url>http://download.java.net/glassfish/3.1.2.2/release/glassfish-3.1.2.2.zip</url>
                           <downloadDir>${settings.localRepository}/org/codehaus/cargo/cargo-container-archives</downloadDir>
                           <extractDir>${project.build.directory}/cargo/extract</extractDir>
                        </zipUrlInstaller>
                        <log>${cargo.log}</log>
                        <output>${cargo.output}</output>
                     </container>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>

      <profile>
         <id>jboss-it</id>

         <dependencies>
            <dependency>
               <groupId>com.h2database</groupId>
               <artifactId>h2</artifactId>
            </dependency>
         </dependencies>

         <build>
            <defaultGoal>clean verify</defaultGoal>

            <plugins>

               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <inherited>true</inherited>
                  <configuration>
                     <skipTests>true</skipTests>
                  </configuration>
               </plugin>

               <plugin>
                  <groupId>org.codehaus.cargo</groupId>
                  <artifactId>cargo-maven2-plugin</artifactId>
                  <inherited>true</inherited>
                  <configuration>
                     <container>
                        <containerId>jboss71x</containerId>
                        <zipUrlInstaller>
                           <url>http://download.jboss.org/jbossas/7.1/jboss-as-7.1.1.Final/jboss-as-7.1.1.Final.zip</url>
                           <downloadDir>${settings.localRepository}/org/codehaus/cargo/cargo-container-archives</downloadDir>
                           <extractDir>${project.build.directory}/cargo/extract</extractDir>
                        </zipUrlInstaller>
                        <log>${cargo.log}</log>
                        <output>${cargo.output}</output>
                     </container>
                     <configuration>
                        <properties>
                           <cargo.jvmargs>-Xms1024m -Xmx2048m -XX:PermSize=512m
                              -XX:MaxPermSize=1024m -XX:+UseConcMarkSweepGC
                              -XX:+CMSPermGenSweepingEnabled -XX:+CMSClassUnloadingEnabled</cargo.jvmargs>
                        </properties>
                     </configuration>
                  </configuration>
               </plugin>
            </plugins>

            <resources>
               <resource>
                  <directory>src/main/resources</directory>
                  <filtering>true</filtering>
                  <excludes>
                     <exclude>persistence.properties</exclude>
                     <exclude>persistenceContextEMFactory.xml</exclude>
                  </excludes>
               </resource>
               <resource>
                  <directory>src/test/resources/jboss</directory>
                  <filtering>true</filtering>
                  <includes>
                     <include>persistenceContextEMFactory.xml</include>
                  </includes>
               </resource>
               <resource>
                  <directory>src/test/resources</directory>
                  <filtering>true</filtering>
                  <includes>
                     <include>persistence.properties</include>
                  </includes>
               </resource>
            </resources>
         </build>
      </profile>

      <profile>
         <id>weblogic-it</id>

         <properties>
            <weblogic.home>/opt/weblogic-12.1.1</weblogic.home>
         </properties>

         <dependencies>
            <dependency>
               <groupId>com.h2database</groupId>
               <artifactId>h2</artifactId>
            </dependency>
         </dependencies>

         <build>
            <defaultGoal>clean verify</defaultGoal>

            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <inherited>true</inherited>
                  <configuration>
                     <skipTests>true</skipTests>
                  </configuration>
               </plugin>

               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-dependency-plugin</artifactId>
                  <inherited>true</inherited>
                  <executions>
                     <execution>
                        <id>explode-build-tools-for-weblogic</id>
                        <phase>test</phase>
                        <goals>
                           <goal>unpack</goal>
                        </goals>
                        <configuration>
                           <artifactItems>
                              <artifactItem>
                                 <groupId>org.apache.syncope</groupId>
                                 <artifactId>syncope-build-tools</artifactId>
                                 <version>${project.version}</version>
                                 <outputDirectory>${project.build.directory}/syncope-build-tools-test</outputDirectory>
                                 <type>war</type>
                              </artifactItem>
                           </artifactItems>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>

               <plugin>
                  <groupId>org.codehaus.cargo</groupId>
                  <artifactId>cargo-maven2-plugin</artifactId>
                  <inherited>false</inherited>
                  <configuration>
                     <container>
                        <containerId>weblogic103x</containerId>
                        <type>installed</type>
                        <home>${weblogic.home}/wlserver</home>

                        <dependencies>
                           <dependency>
                              <location>${weblogic.home}/patch_wls1211/profiles/default/sys_manifest_classpath/weblogic_patch.jar</location>
                           </dependency>
                           <dependency>
                              <location>${weblogic.home}/patch_ocp371/profiles/default/sys_manifest_classpath/weblogic_patch.jar</location>
                           </dependency>
                        </dependencies>

                        <log>${cargo.log}</log>
                        <output>${cargo.output}</output>

                        <systemProperties>
                           <java.endorsed.dirs>${weblogic.home}/wlserver/endorsed</java.endorsed.dirs>
                        </systemProperties>
                     </container>
                     <configuration>
                        <properties>
                           <cargo.weblogic.bea.home>${weblogic.home}</cargo.weblogic.bea.home>
                        </properties>
                     </configuration>
                     <deployables>
                        <deployable>
                           <location>${cargo.run.dir}</location>
                           <pingURL>http://localhost:${cargo.servlet.port}/syncope/rest/schema/user/list.xml</pingURL>
                           <pingTimeout>1200000</pingTimeout>
                           <properties>
                              <context>syncope</context>
                           </properties>
                        </deployable>
                        <deployable>
                           <groupId>org.connid.bundles.soap</groupId>
                           <artifactId>wssample</artifactId>
                           <type>war</type>
                           <properties>
                              <context>wssample</context>
                           </properties>
                        </deployable>
                        <deployable>
                           <location>${project.build.directory}/syncope-build-tools-test</location>
                           <properties>
                              <context>syncope-build-tools</context>
                           </properties>
                        </deployable>
                     </deployables>
                  </configuration>
               </plugin>
            </plugins>

            <resources>
               <resource>
                  <directory>src/main/resources</directory>
                  <filtering>true</filtering>
                  <excludes>
                     <exclude>persistence.properties</exclude>
                  </excludes>
               </resource>
               <resource>
                  <directory>src/test/resources</directory>
                  <filtering>true</filtering>
                  <includes>
                     <include>persistence.properties</include>
                  </includes>
               </resource>
            </resources>
         </build>
      </profile>

   </profiles>

</project>
