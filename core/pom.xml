<?xml version="1.0" encoding="UTF-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.apache.syncope</groupId>
    <artifactId>syncope</artifactId>
    <version>1.3.0-SNAPSHOT</version>
  </parent>

  <name>Apache Syncope Core</name>
  <description>Apache Syncope Core</description>

  <groupId>org.apache.syncope</groupId>
  <artifactId>syncope-core</artifactId>
  <packaging>war</packaging>

  <distributionManagement>
    <site>
      <id>syncope.website</id>
      <name>Apache Syncope website</name>
      <url>${site.deploymentBaseUrl}/${project.artifactId}</url>
    </site>
  </distributionManagement>

  <properties>
    <jdbcdriver.groupId>com.h2database</jdbcdriver.groupId>
    <jdbcdriver.artifactId>h2</jdbcdriver.artifactId>
  </properties>

  <dependencies>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.servlet.jsp</groupId>
      <artifactId>jsp-api</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.el</groupId>
      <artifactId>javax.el-api</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.geronimo.specs</groupId>
      <artifactId>geronimo-javamail_1.4_spec</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.javamail</groupId>
      <artifactId>geronimo-javamail_1.4_provider</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-jexl</artifactId>
    </dependency>    

    <dependency>
      <groupId>org.activiti</groupId>
      <artifactId>activiti-engine</artifactId>
    </dependency>
    <dependency>
      <groupId>org.activiti</groupId>
      <artifactId>activiti-spring</artifactId>
    </dependency>
    <dependency>
      <groupId>org.activiti</groupId>
      <artifactId>activiti-json-converter</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-frontend-jaxrs</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-rs-extension-providers</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-rs-extension-search</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-frontend-jaxws</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-rs-service-description</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-rs-client</artifactId>
    </dependency>  

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context-support</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-orm</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-oxm</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-expression</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-config</artifactId>
    </dependency>

    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjweaver</artifactId>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.jaxrs</groupId>
      <artifactId>jackson-jaxrs-json-provider</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-afterburner</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.velocity</groupId>
      <artifactId>velocity</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.velocity</groupId>
      <artifactId>velocity-tools</artifactId>
    </dependency>

    <dependency>
      <groupId>org.quartz-scheduler</groupId>
      <artifactId>quartz</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.cocoon.sax</groupId>
      <artifactId>cocoon-sax</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.cocoon.optional</groupId>
      <artifactId>cocoon-optional</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.xmlgraphics</groupId>
      <artifactId>fop</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.avalon.framework</groupId>
      <artifactId>avalon-framework-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.avalon.framework</groupId>
      <artifactId>avalon-framework-impl</artifactId>
    </dependency>

    <dependency>
      <groupId>xalan</groupId>
      <artifactId>xalan</artifactId>
    </dependency>
    <dependency>
      <groupId>xerces</groupId>
      <artifactId>xercesImpl</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.geronimo.specs</groupId> 
      <artifactId>geronimo-jpa_2.0_spec</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.openjpa</groupId>
      <artifactId>openjpa-jdbc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.openjpa</groupId>
      <artifactId>openjpa-persistence-jdbc</artifactId>
    </dependency>
    
    <dependency>
      <groupId>commons-dbcp</groupId> 
      <artifactId>commons-dbcp</artifactId>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
    </dependency>

    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-all</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.syncope</groupId>
      <artifactId>syncope-common</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.syncope</groupId>
      <artifactId>syncope-common</artifactId>
      <version>${project.version}</version>
      <classifier>javadoc</classifier>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
    </dependency> 
    <dependency>
      <groupId>com.lmax</groupId>
      <artifactId>disruptor</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
    </dependency>

    <dependency>
      <groupId>net.tirasa.connid</groupId>
      <artifactId>connector-framework</artifactId>
    </dependency>
    <dependency>
      <groupId>net.tirasa.connid</groupId>
      <artifactId>connector-framework-internal</artifactId>
    </dependency>
    <dependency>
      <groupId>net.tirasa.connid</groupId>
      <artifactId>slf4j-logging</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jasypt</groupId>
      <artifactId>jasypt</artifactId>
    </dependency> 

    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>jquery</artifactId>
    </dependency>
    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>jquery-ui</artifactId>
    </dependency>
    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>highlightjs</artifactId>
    </dependency>

    <!-- TEST -->
    <dependency>
      <groupId>org.apache.syncope</groupId>
      <artifactId>syncope-client</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.syncope</groupId>
      <artifactId>syncope-build-tools</artifactId>
      <version>${project.version}</version>
      <type>war</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.tirasa.connid.bundles.soap</groupId>
      <artifactId>wssample</artifactId>
      <type>war</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.icegreen</groupId>
      <artifactId>greenmail</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- /TEST -->
  </dependencies>

  <build>
    <finalName>${project.parent.artifactId}</finalName>

    <plugins>

      <plugin>
        <groupId>org.apache.openjpa</groupId>
        <artifactId>openjpa-maven-plugin</artifactId>
        <inherited>true</inherited>
        <dependencies>
          <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${h2.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <persistenceXmlFile>${project.basedir}/src/main/resources/META-INF/spring-persistence.xml</persistenceXmlFile> 
          <includes>org/apache/syncope/core/persistence/beans/**/*.class</includes>
          <connectionDriverName>org.springframework.jdbc.datasource.DriverManagerDataSource</connectionDriverName>
          <connectionProperties>
            driverClassName=org.h2.Driver,
            url=jdbc:h2:mem:syncopedb
            username=sa,
            password=
          </connectionProperties>
        </configuration>
        <executions>
          <execution>
            <id>enhancer</id>
            <phase>process-classes</phase>
            <goals>
              <goal>enhance</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <inherited>true</inherited>
        <executions>
          <execution>
            <id>set-bundles</id>
            <phase>process-test-resources</phase>
            <goals>
              <goal>copy</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <inherited>true</inherited>
        <configuration>
          <systemPropertyVariables>
            <jaxrsContentType>${jaxrs.content.type}</jaxrsContentType>
          </systemPropertyVariables>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <inherited>true</inherited>
        <configuration>
          <systemPropertyVariables>
            <jaxrsContentType>${jaxrs.content.type}</jaxrsContentType>
          </systemPropertyVariables>
        </configuration>
        <executions>
          <execution>
            <id>verify</id>
            <goals>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <inherited>true</inherited>
        <executions>
          <execution>
            <id>setupTestWebapp</id>
            <phase>pre-integration-test</phase>
            <configuration>
              <target>
                <unzip src="${project.build.directory}/${project.build.finalName}.war" dest="${cargo.run.dir}" />
                <copy file="${project.build.directory}/test-classes/org/apache/syncope/core/sync/TestSyncActions.class" todir="${cargo.run.dir}/WEB-INF/classes/org/apache/syncope/core/sync" />
                <copy file="${project.build.directory}/test-classes/org/apache/syncope/core/sync/TestSyncRule.class" todir="${cargo.run.dir}/WEB-INF/classes/org/apache/syncope/core/sync" />
                <copy file="${project.build.directory}/test-classes/org/apache/syncope/core/rest/data/DoubleValueAttributableTransformer.class" todir="${cargo.run.dir}/WEB-INF/classes/org/apache/syncope/core/rest/data" />
                <copy file="${project.build.directory}/test-classes/db.jsp" todir="${cargo.run.dir}" />
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
            <id>setupCSV</id>
            <phase>pre-integration-test</phase>
            <configuration>
              <target>
                <copy file="${project.build.directory}/test-classes/test.csv" todir="${test.csvdir.path}" overwrite="true" />
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven2-plugin</artifactId>
        <inherited>true</inherited>
        <configuration>
          <container>
            <dependencies>
              <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
              </dependency>
              <dependency>
                <groupId>${jdbcdriver.groupId}</groupId>
                <artifactId>${jdbcdriver.artifactId}</artifactId>
              </dependency>
            </dependencies>
          </container>
          <configuration>
            <type>standalone</type>
            <properties>
              <cargo.servlet.port>${cargo.servlet.port}</cargo.servlet.port>
              <cargo.tomcat.ajp.port>${cargo.tomcat.ajp.port}</cargo.tomcat.ajp.port>
              <cargo.rmi.port>${cargo.rmi.port}</cargo.rmi.port>

              <cargo.jvmargs>-noverify -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC -XX:MaxPermSize=256m</cargo.jvmargs>
            </properties>
            <configfiles>
              <configfile>
                <file>${project.build.directory}/test-classes/context.xml</file>
                <todir>conf/</todir>
                <tofile>context.xml</tofile>
              </configfile>
            </configfiles>
          </configuration>
          <deployables>
            <deployable>
              <groupId>net.tirasa.connid.bundles.soap</groupId>
              <artifactId>wssample</artifactId>
              <type>war</type>
              <properties>
                <context>wssample</context>
              </properties>
            </deployable>
            <deployable>
              <groupId>org.apache.syncope</groupId>
              <artifactId>syncope-build-tools</artifactId>
              <type>war</type>
              <properties>
                <context>syncope-build-tools</context>
              </properties>
            </deployable>
            <deployable>
              <location>${cargo.run.dir}</location>
              <pingURL>http://localhost:${cargo.servlet.port}/syncope/cacheStats.jsp</pingURL>
              <pingTimeout>60000</pingTimeout>
              <properties>
                <context>syncope</context>
              </properties>
            </deployable>
          </deployables>
        </configuration>
        <executions>
          <execution>
            <id>start-container</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>stop-container</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <executions>
          <execution>
            <id>bundle-manifest</id>
            <phase>process-classes</phase>
            <goals>
              <goal>manifest</goal>
            </goals>
            <configuration>
              <instructions>
                <Bundle-Name>${project.name}</Bundle-Name>
                <Bundle-SymbolicName>org.apache.syncope.core</Bundle-SymbolicName>
                <Bundle-Version>${project.version}</Bundle-Version>
                <Export-Package>
                  org.apache.syncope.core*;version=${project.version};-split-package:=merge-first
                </Export-Package>
                <Import-Package>
                  javax.annotation,
                  javax.crypto*,
                  javax.mail.internet,
                  javax.naming,
                  javax.persistence,
                  javax.rmi,
                  javax.servlet*,
                  javax.sql,
                  javax.validation*,
                  javax.xml*,
                  org.w3c.dom,
                  org.xml.sax*,
                  org.activiti*;version="[5,6)",
                  org.apache.cocoon*;version="[2,4)",
                  org.apache.commons.collections.keyvalue;version="[3.2,4)",
                  org.apache.commons.io;version="[1.3,2)",
                  org.apache.commons.jexl2*;version="[2.1,3)",
                  org.apache.commons.lang3;version="[3,4)",
                  org.apache.openjpa*;version="[2,3)",
                  org.apache.syncope.common*;version=${project.version},
                  org.apache.velocity*;version="[1.7,2)",
                  com.fasterxml.jackson*;version="[2.2.2,2.3)",
                  org.jasypt.digest;version="[1.9,2)",
                  org.quartz*;version="[2.1,3)",
                  org.springframework*;version="[3,4)",
                  org.apache.logging.log4j*;resolution:=optional,
                  org.identityconnectors*;resolution:=optional,
                  org.slf4j;resolution:=optional
                </Import-Package>
              </instructions>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
	<inherited>true</inherited>
        <configuration>
          <webResources>
            <resource>
              <directory>src/main/webapp</directory>
              <includes>
                <include>**/*.jsp</include>
                <include>WEB-INF/web.xml</include>
              </includes>
              <filtering>true</filtering>
            </resource>
            <resource>
              <directory>${project.build.outputDirectory}</directory>
              <includes>
                <include>META-INF/DEPENDENCIES*</include>
              </includes>
            </resource>
            <resource>
              <directory>${basedir}</directory>
              <targetPath>META-INF</targetPath>
              <includes>
                <include>LICENSE</include>
                <include>NOTICE</include>
              </includes>
            </resource>
          </webResources>
          <packagingExcludes>WEB-INF/classes/META-INF/LICENSE*,WEB-INF/classes/META-INF/NOTICE*,WEB-INF/classes/META-INF/DEPENDENCIES*</packagingExcludes>
          <archive>
            <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
          </archive>
        </configuration>
      </plugin>
    </plugins>

    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
      <resource>
        <directory>..</directory>
        <targetPath>META-INF</targetPath>
        <includes>
          <include>LICENSE</include>
          <include>NOTICE</include>
        </includes>
      </resource>
    </resources>

    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
        <excludes>
          <exclude>oracle/**</exclude>
          <exclude>postgres/**</exclude>
          <exclude>mysql/**</exclude>
          <exclude>sqlserver/**</exclude>
          <exclude>jboss/**</exclude>
          <exclude>weblogic/**</exclude>
        </excludes>
      </testResource>
    </testResources>
  </build>

  <profiles>

    <profile>
      <id>skipTests</id>

      <dependencies>
        <dependency>
          <groupId>com.h2database</groupId>
          <artifactId>h2</artifactId>
        </dependency>
      </dependencies>

      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <inherited>true</inherited>
            <configuration>
              <skipTests>${skipTests}</skipTests>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <inherited>true</inherited>
            <configuration>
              <skipTests>${skipTests}</skipTests>
            </configuration>
          </plugin>

          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven2-plugin</artifactId>
            <inherited>true</inherited>
            <configuration>
              <deployables>
                <deployable>
                  <location>${project.build.directory}/${project.build.finalName}.war</location>
                </deployable>
              </deployables>
            </configuration>
            <executions>
              <execution>
                <id>install-container</id>
                <phase>package</phase>
                <goals>
                  <goal>install</goal>
                </goals>
              </execution>
              <execution>
                <id>start-container</id>
                <phase>none</phase>
              </execution>
              <execution>
                <id>stop-container</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>sqlgen</id>

      <dependencies>
        <dependency>
          <groupId>com.h2database</groupId>
          <artifactId>h2</artifactId>
        </dependency>
        <dependency>
          <groupId>org.apache.openjpa</groupId>
          <artifactId>openjpa</artifactId>
          <version>${openjpa.version}</version>
        </dependency>        
      </dependencies>

      <build>
        <defaultGoal>clean process-classes</defaultGoal>

        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <configuration>
              <includeProjectDependencies>false</includeProjectDependencies>
              <includePluginDependencies>true</includePluginDependencies>

              <executable>java</executable>
              <arguments>
                <argument>-DpersistenceXmlFile=${project.basedir}/src/main/resources/META-INF/spring-persistence.xml</argument>
                <argument>-Dbase=${project.build.outputDirectory}/org/apache/syncope/core/persistence/beans</argument>
                <argument>-DconnectionDriverName=org.apache.commons.dbcp.BasicDataSource</argument>
                <argument>-DconnectionProperties=driverClassName;org.h2.Driver,url;jdbc:h2:mem:syncopedb,username;sa,password;</argument>
                <argument>-DsqlFile=${project.build.directory}/database.sql</argument>

                <argument>-classpath</argument>
                <classpath>
                  <dependency>org.apache.syncope:syncope-common</dependency>
                  <dependency>org.apache.openjpa:openjpa</dependency>
                  <dependency>commons-io:commons-io</dependency>
                  <dependency>commons-lang:commons-lang</dependency>
                  <dependency>org.apache.geronimo.specs:geronimo-jpa_2.0_spec</dependency>
                  <dependency>org.apache.geronimo.specs:geronimo-jms_1.1_spec</dependency>
                  <dependency>org.apache.geronimo.specs:geronimo-jta_1.1_spec</dependency>
                  <dependency>javax.validation:validation-api</dependency>
                  <dependency>net.sourceforge.serp:serp</dependency>
                  <dependency>commons-pool:commons-pool</dependency>
                  <dependency>commons-dbcp:commons-dbcp</dependency>
                  <dependency>commons-collections:commons-collections</dependency>
                  <dependency>org.apache.commons:commons-jexl</dependency>
                  <dependency>net.tirasa.connid:connector-framework</dependency>
                  <dependency>net.tirasa.connid:connector-framework-internal</dependency>
                  <dependency>com.h2database:h2</dependency>
                  <dependency>org.slf4j:slf4j-api</dependency>
                  <dependency>org.apache.logging.log4j:log4j-api</dependency>
                </classpath>

                <argument>org.apache.syncope.core.persistence.SQLSchemaGenerator</argument>
              </arguments>
            </configuration>
            <executions>
              <execution>
                <id>sql</id>
                <phase>process-classes</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>dev</id>

      <build>
        <defaultGoal>clean verify</defaultGoal>

        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <inherited>true</inherited>
            <configuration>
              <skipTests>true</skipTests>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>debug</id>

      <properties>
        <skipTests>true</skipTests>
      </properties>

      <build>
        <defaultGoal>clean verify cargo:run</defaultGoal>

        <plugins>
          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven2-plugin</artifactId>
            <inherited>true</inherited>
            <configuration>
              <configuration>
                <properties>
                  <cargo.jvmargs>-Xdebug -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n
                    -noverify -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC -XX:MaxPermSize=256m</cargo.jvmargs>
                </properties>
              </configuration>
            </configuration>
            <executions>
              <execution>
                <id>start-container</id>
                <phase>none</phase>
              </execution>
              <execution>
                <id>stop-container</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>noopworkflow</id>

      <build>
        <defaultGoal>clean verify</defaultGoal>

        <plugins>
          <!-- Strip Activiti-related entries from content.xml and indexes.xml -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>xml-maven-plugin</artifactId>
            <inherited>true</inherited>
            <executions>
              <execution>
                <phase>process-test-resources</phase>
                <goals>
                  <goal>transform</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <forceCreation>true</forceCreation>
              <transformationSets>
                <transformationSet>
                  <dir>${project.build.directory}/test-classes</dir>
                  <includes>
                    <include>content.xml</include>
                    <include>indexes.xml</include>
                  </includes>
                  <outputDir>${project.build.directory}/test-classes/</outputDir>
                  <stylesheet>${basedir}/src/test/resources/noopworkflow/stripActivitiFromContent.xsl</stylesheet>
                  <outputProperties>
                    <outputProperty>
                      <name>indent</name>
                      <value>yes</value>
                    </outputProperty>
                  </outputProperties>
                </transformationSet>
              </transformationSets>
            </configuration>
          </plugin>
        </plugins>

        <resources>
          <resource>
            <directory>src/main/resources</directory>
            <filtering>true</filtering>
            <excludes>
              <exclude>workflowContext.xml</exclude>
              <exclude>workflow.properties</exclude>
            </excludes>
          </resource>
          <resource>
            <directory>src/test/resources/noopworkflow</directory>
            <filtering>true</filtering>
            <includes>
              <include>workflowContext.xml</include>
              <include>workflow.properties</include>
            </includes>
          </resource>
        </resources>
      </build>
    </profile>

    <profile>
      <id>oracle-it</id>

      <properties>
        <jdbcdriver.groupId>com.oracle</jdbcdriver.groupId>
        <jdbcdriver.artifactId>ojdbc6</jdbcdriver.artifactId>
      </properties>

      <dependencies>
        <dependency>
          <groupId>com.oracle</groupId>
          <artifactId>ojdbc6</artifactId>
          <version>11.1.0</version>
          <scope>test</scope>
        </dependency>
      </dependencies>

      <build>
        <defaultGoal>clean verify</defaultGoal>

        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <inherited>true</inherited>
            <executions>
              <execution>
                <id>set-oracle</id>
                <phase>process-test-resources</phase>
                <configuration>
                  <target>
                    <copy file="${basedir}/src/main/resources/META-INF/orm.xml.oracle" tofile="${project.build.directory}/classes/META-INF/orm.xml" overwrite="true" />
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>

        <testResources>
          <testResource>
            <directory>src/test/resources</directory>
            <filtering>true</filtering>
            <excludes>
              <exclude>persistence.properties</exclude>
            </excludes>
          </testResource>
          <testResource>
            <directory>src/test/resources/oracle</directory>
            <filtering>true</filtering>
          </testResource>
        </testResources>
      </build>
    </profile>

    <profile>
      <id>sqlserver-it</id>

      <properties>
        <jdbcdriver.groupId>com.microsoft.sqlserver</jdbcdriver.groupId>
        <jdbcdriver.artifactId>sqljdbc4</jdbcdriver.artifactId>
      </properties>
      
      <dependencies>
        <dependency>
          <groupId>com.microsoft.sqlserver</groupId>
          <artifactId>sqljdbc4</artifactId>
          <version>4.0</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
      
      <build>
        <defaultGoal>clean verify cargo:run</defaultGoal>

        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <inherited>true</inherited>
            <configuration>
              <skipTests>true</skipTests>
            </configuration>
          </plugin>
        
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <inherited>true</inherited>
            <executions>
              <execution>
                <id>set-sqlserver</id>
                <phase>process-test-resources</phase>
                <configuration>
                  <target>
                    <copy file="${basedir}/src/main/resources/META-INF/orm.xml.sqlserver" tofile="${project.build.directory}/classes/META-INF/orm.xml" overwrite="true" />
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>

        <testResources>
          <testResource>
            <directory>src/test/resources</directory>
            <filtering>true</filtering>
            <excludes>
              <exclude>persistence.properties</exclude>
            </excludes>
          </testResource>
          <testResource>
            <directory>src/test/resources/sqlserver</directory>
            <filtering>true</filtering>
          </testResource>
        </testResources>
      </build>
    </profile>
    
    <profile>
      <id>postgres-it</id>

      <properties>
        <jdbcdriver.groupId>org.postgresql</jdbcdriver.groupId>
        <jdbcdriver.artifactId>postgresql</jdbcdriver.artifactId>
      </properties>

      <dependencies>
        <dependency>
          <groupId>org.postgresql</groupId>
          <artifactId>postgresql</artifactId>
          <version>9.3-1101-jdbc3</version>
          <scope>test</scope>
        </dependency>
      </dependencies>

      <build>
        <defaultGoal>clean verify</defaultGoal>

        <testResources>
          <testResource>
            <directory>src/test/resources</directory>
            <filtering>true</filtering>
            <excludes>
              <exclude>persistence.properties</exclude>
            </excludes>
          </testResource>
          <testResource>
            <directory>src/test/resources/postgres</directory>
            <filtering>true</filtering>
          </testResource>
        </testResources>
      </build>
    </profile>

    <profile>
      <id>mysql-it</id>

      <properties>
        <jdbcdriver.groupId>mysql</jdbcdriver.groupId>
        <jdbcdriver.artifactId>mysql-connector-java</jdbcdriver.artifactId>
      </properties>

      <dependencies>
        <dependency>
          <groupId>mysql</groupId>
          <artifactId>mysql-connector-java</artifactId>
          <version>5.1.26</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
      
      <build>
        <defaultGoal>clean verify</defaultGoal>

        <testResources>
          <testResource>
            <directory>src/test/resources</directory>
            <filtering>true</filtering>
            <excludes>
              <exclude>persistence.properties</exclude>
            </excludes>
          </testResource>
          <testResource>
            <directory>src/test/resources/mysql</directory>
            <filtering>true</filtering>
          </testResource>
        </testResources>
      </build>
    </profile>

    <profile>
      <id>glassfish-it</id>

      <dependencies>
        <dependency>
          <groupId>com.h2database</groupId>
          <artifactId>h2</artifactId>
        </dependency>
      </dependencies>

      <build>
        <defaultGoal>clean verify</defaultGoal>

        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <inherited>true</inherited>
            <configuration>
              <skipTests>true</skipTests>
            </configuration>
          </plugin>

          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven2-plugin</artifactId>
            <inherited>true</inherited>
            <configuration>
              <container>
                <containerId>glassfish4x</containerId>
                <zipUrlInstaller>
                  <url>http://download.java.net/glassfish/4.1/release/glassfish-4.1.zip</url>
                  <downloadDir>${settings.localRepository}/org/codehaus/cargo/cargo-container-archives</downloadDir>
                  <extractDir>${project.build.directory}/cargo/extract</extractDir>
                </zipUrlInstaller>
                <log>${cargo.log}</log>
                <output>${cargo.output}</output>
              </container>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>jboss-it</id>

      <dependencies>
        <dependency>
          <groupId>com.h2database</groupId>
          <artifactId>h2</artifactId>
        </dependency>
      </dependencies>

      <build>
        <defaultGoal>clean verify</defaultGoal>

        <plugins>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <inherited>true</inherited>
            <configuration>
              <skipTests>true</skipTests>
            </configuration>
          </plugin>

          <!-- Disable MANIFEST.MF OSGi handling -->
          <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <executions>
              <execution>
                <id>bundle-manifest</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <inherited>true</inherited>
            <executions>
              <execution>
                <id>setupBuildToolsForJBoss</id>
                <phase>pre-integration-test</phase>
                <configuration>
                  <target>
                    <unzip src="${settings.localRepository}/org/apache/syncope/syncope-build-tools/${project.version}/syncope-build-tools-${project.version}.war" dest="${project.build.directory}/syncope-build-tools-test" />
                    <copy file="${project.build.outputDirectory}/META-INF/MANIFEST.MF" todir="${project.build.directory}/syncope-build-tools-test/META-INF" overwrite="true" />
                    <copy file="${settings.localRepository}/com/h2database/h2/${h2.version}/h2-${h2.version}.jar" todir="${project.build.directory}/syncope-build-tools-test/WEB-INF/lib" overwrite="true" />
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven2-plugin</artifactId>
            <inherited>true</inherited>
            <configuration>
              <container>
                <containerId>wildfly8x</containerId>
                <zipUrlInstaller>
                  <url>http://download.jboss.org/wildfly/8.1.0.Final/wildfly-8.1.0.Final.zip</url>
                  <downloadDir>${settings.localRepository}/org/codehaus/cargo/cargo-container-archives</downloadDir>
                  <extractDir>${project.build.directory}/cargo/extract</extractDir>
                </zipUrlInstaller>
                <log>${cargo.log}</log>
                <output>${cargo.output}</output>
              </container>
              <configuration>
                <properties>
                  <cargo.jvmargs>-Xms1024m -Xmx2048m -XX:PermSize=512m -XX:MaxPermSize=1024m -XX:+UseConcMarkSweepGC -XX:+CMSPermGenSweepingEnabled -XX:+CMSClassUnloadingEnabled</cargo.jvmargs>
                </properties>
              </configuration>
              <deployables>
                <deployable>
                  <location>${cargo.run.dir}</location>
                  <pingURL>http://localhost:${cargo.servlet.port}/syncope/cacheStats.jsp</pingURL>
                  <pingTimeout>1200000</pingTimeout>
                  <properties>
                    <context>syncope</context>
                  </properties>
                </deployable>
                <deployable>
                  <groupId>net.tirasa.connid.bundles.soap</groupId>
                  <artifactId>wssample</artifactId>
                  <type>war</type>
                  <properties>
                    <context>wssample</context>
                  </properties>
                </deployable>
                <deployable>
                  <location>${project.build.directory}/syncope-build-tools-test</location>
                  <properties>
                    <context>syncope-build-tools</context>
                  </properties>
                </deployable>
              </deployables>
            </configuration>            
          </plugin>
        </plugins>

        <resources>
          <resource>
            <directory>src/main/resources</directory>
            <filtering>true</filtering>
            <excludes>
              <exclude>persistence.properties</exclude>
              <exclude>persistenceContextEMFactory.xml</exclude>
            </excludes>
          </resource>
          <resource>
            <directory>src/test/resources/jboss</directory>
            <filtering>true</filtering>
          </resource>
          <resource>
            <directory>src/test/resources</directory>
            <filtering>true</filtering>
            <includes>
              <include>persistence.properties</include>
            </includes>            
          </resource>
        </resources>
      </build>
    </profile>

    <profile>
      <id>weblogic-it</id>

      <properties>
        <weblogic.home>/opt/weblogic-12.1.1</weblogic.home>
      </properties>

      <dependencies>
        <dependency>
          <groupId>com.h2database</groupId>
          <artifactId>h2</artifactId>
        </dependency>
      </dependencies>

      <build>
        <defaultGoal>clean verify</defaultGoal>

        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <inherited>true</inherited>
            <configuration>
              <skipTests>true</skipTests>
            </configuration>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <inherited>true</inherited>
            <executions>
              <execution>
                <id>setupBuildToolsForWeblogic</id>
                <phase>pre-integration-test</phase>
                <configuration>
                  <target>
                    <!-- Needed because WebLogic has problems in running ApacheDS from the WAR archive -->
                    <unzip src="${settings.localRepository}/org/apache/syncope/syncope-build-tools/${project.version}/syncope-build-tools-${project.version}.war" dest="${project.build.directory}/syncope-build-tools-test" />
                    <!-- Needed because WebLogic is installed (H2 dependency cannot be injected via cargo) -->
                    <copy file="${settings.localRepository}/com/h2database/h2/${h2.version}/h2-${h2.version}.jar" todir="${project.build.directory}/syncope-build-tools-test/WEB-INF/lib" overwrite="true" />
                    <!-- Needed because WebLogic deploys first core then build-tools: this JSP will just ask core to
                    reload all connectors -->
                    <copy file="${project.build.directory}/test-classes/conninstance-reload.jsp" todir="${project.build.directory}/syncope-build-tools-test" overwrite="true" />
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven2-plugin</artifactId>
            <inherited>false</inherited>
            <configuration>
              <container>
                <containerId>weblogic12x</containerId>
                <type>installed</type>
                <home>${weblogic.home}/wlserver</home>

                <log>${cargo.log}</log>
                <output>${cargo.output}</output>
              </container>
              <configuration>
                <properties>
                  <cargo.weblogic.bea.home>${weblogic.home}</cargo.weblogic.bea.home>
                  <cargo.jvmargs>-server -Xms1024m -Xmx1024m -XX:PermSize=512m -XX:MaxPermSize=1024m -XX:NewRatio=2 
                    -XX:SurvivorRatio=128 -XX:MaxTenuringThreshold=0 -XX:+UseG1GC -XX:MaxGCPauseMillis=200 
                    -XX:InitiatingHeapOccupancyPercent=80 -XX:G1HeapRegionSize=2048k -XX:+UseTLAB 
                    -XX:LargePageSizeInBytes=2048k -XX:+UseLargePages -Dtangosol.coherence.mode=prod 
                    -Dtangosol.coherence.distributed.localstorage=false</cargo.jvmargs>
                </properties>
              </configuration>
              <deployables>
                <deployable>
                  <groupId>net.tirasa.connid.bundles.soap</groupId>
                  <artifactId>wssample</artifactId>
                  <type>war</type>
                  <properties>
                    <context>wssample</context>
                  </properties>
                </deployable>
                <deployable>
                  <location>${project.build.directory}/syncope-build-tools-test</location>
                  <!-- build-tools are correctly deployed only when call to this JSP returns 200, e.g.
                  when connectors are reloaded by the core -->
                  <pingURL>http://localhost:${cargo.servlet.port}/syncope-build-tools/conninstance-reload.jsp</pingURL>
                  <pingTimeout>1200000</pingTimeout>
                  <properties>
                    <context>syncope-build-tools</context>
                  </properties>
                </deployable>
                <deployable>
                  <location>${cargo.run.dir}</location>
                  <pingURL>http://localhost:${cargo.servlet.port}/syncope/cacheStats.jsp</pingURL>
                  <pingTimeout>1200000</pingTimeout>
                  <properties>
                    <context>syncope</context>
                  </properties>
                </deployable>
              </deployables>
            </configuration>
          </plugin>
        </plugins>

        <resources>
          <resource>
            <directory>src/main/resources</directory>
            <filtering>true</filtering>
            <excludes>
              <exclude>persistence.properties</exclude>
            </excludes>
          </resource>
          <resource>
            <directory>src/test/resources</directory>
            <filtering>true</filtering>
            <includes>
              <include>persistence.properties</include>
            </includes>
          </resource>
        </resources>
        <testResources>
          <testResource>
            <directory>src/test/resources/weblogic</directory>
            <filtering>true</filtering>            
          </testResource>
        </testResources>
      </build>
    </profile>

  </profiles>
  
</project>
