<?xml version="1.0" encoding="UTF-8"?>
<!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor
   license agreements. See the NOTICE file distributed with this work for
   additional
   information regarding copyright ownership. The ASF licenses this file
   to
   you under the Apache License, Version 2.0 (the "License"); you may not
   use
   this file except in compliance with the License. You may obtain a copy
   of
   the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required
   by applicable law or agreed to in writing, software distributed under
   the
   License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS
   OF ANY KIND, either express or implied. See the License for the specific
   language governing permissions and limitations under the License. -->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:context="http://www.springframework.org/schema/context" xmlns:jaxrs="http://cxf.apache.org/jaxrs"
   xmlns:oxm="http://www.springframework.org/schema/oxm" xmlns:util="http://www.springframework.org/schema/util"
   xsi:schemaLocation="http://www.springframework.org/schema/beans   
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context                
       http://www.springframework.org/schema/context/spring-context.xsd
       http://cxf.apache.org/jaxrs                                  
       http://cxf.apache.org/schemas/jaxrs.xsd
       http://www.springframework.org/schema/util 
       http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/oxm                    
       http://www.springframework.org/schema/oxm/spring-oxm.xsd"
>

   <import resource="classpath:META-INF/cxf/cxf.xml" />
   <import resource="classpath:META-INF/cxf/cxf-servlet.xml" />

   <context:component-scan base-package="org.apache.syncope.core.rest.controller" />

   <bean id="depthProperties" class="org.apache.cxf.staxutils.DocumentDepthProperties">
      <property name="innerElementCountThreshold" value="500" />
   </bean>

   <bean id="jaxbProvider" class="org.apache.cxf.jaxrs.provider.JAXBElementProvider">
      <property name="depthProperties" ref="depthProperties" />
      <property name="marshallerProperties">
         <map>
            <entry key="jaxb.formatted.output">
               <value type="java.lang.Boolean">true</value>
            </entry>
         </map>
      </property>
      <!--property name="collectionWrapperMap">
         <map>
            <entry>
               <key>
                  <value>com.foo.bar.MyObject</value>
               </key>
               <value>MyObjects</value>
            </entry>
         </map>
      </property-->
   </bean>

   <util:list id="jsonKeys">
      <value>roleTOs</value>
   </util:list>

   <bean id="jsonProvider" class="org.apache.cxf.jaxrs.provider.json.JSONProvider">
      <property name="depthProperties" ref="depthProperties" />
      <property name="serializeAsArray" value="true" />
      <property name="arrayKeys" ref="jsonKeys" />
      <!-- Only for compartibility with Spring WS-Stack: -->
      <property name="dropRootElement" value="true" />
      <property name="supportUnwrapped" value="true" />
   </bean>

   <!--util:map id="jsonNamespaceMap" map-class="java.util.Hashtable">
      <entry key="http://www.example.org/books" value="b" />
   </util:map-->

   <jaxrs:server id="restContainer" address="/">
      <jaxrs:serviceBeans>
         <ref bean="roleController" />
         <ref bean="userController" />
      </jaxrs:serviceBeans>
      <jaxrs:resourceComparator>
         <bean id="myServiceComparator" class="org.apache.syncope.core.rest.QueryResourceInfoComperator" />
      </jaxrs:resourceComparator>
      <jaxrs:providers>
         <ref bean="jaxbProvider" />
         <ref bean="jsonProvider" />
         <bean class="org.apache.syncope.exceptions.RestHttpStatusCodeMapper" />
      </jaxrs:providers>
      <jaxrs:extensionMappings>
         <entry key="json" value="application/json;charset=UTF-8" />
         <entry key="xml" value="application/xml;charset=UTF-8" />
      </jaxrs:extensionMappings>
   </jaxrs:server>

   <bean id="adminUser" class="java.lang.String">
      <constructor-arg value="${adminUser}" />
   </bean>

   <!-- JSON (via Jackson) -->
   <bean id="jacksonObjectMapper" class="org.apache.syncope.core.rest.data.UnwrappedObjectMapper" />
   <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
      <property name="objectMapper" ref="jacksonObjectMapper" />
   </bean>

   <!-- XML (via XStream) -->
   <bean id="xStreamXmlMarshaller" class="org.springframework.oxm.xstream.XStreamMarshaller">
      <property name="autodetectAnnotations" value="true" />
   </bean>
   <bean id="mappingXstreamHttpMessageConverter" class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
      <constructor-arg ref="xStreamXmlMarshaller" />
   </bean>

   <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
   <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
      <property name="messageConverters">
         <list>
            <ref bean="mappingJacksonHttpMessageConverter" />
            <ref bean="mappingXstreamHttpMessageConverter" />
         </list>
      </property>
   </bean>

   <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
      <property name="mediaTypes">
         <map>
            <entry key="json" value="application/json;charset=UTF-8" />
            <entry key="xml" value="application/xml;charset=UTF-8" />
            <entry key="html" value="text/html;charset=UTF-8" />
         </map>
      </property>
      <property name="viewResolvers">
         <list>
            <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
               <property name="prefix" value="/" />
               <property name="suffix" value=".jsp" />
            </bean>
         </list>
      </property>
      <property name="defaultViews">
         <list>
            <bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
               <property name="objectMapper" ref="jacksonObjectMapper" />
            </bean>
            <bean class="org.springframework.web.servlet.view.xml.MarshallingView">
               <constructor-arg ref="xStreamXmlMarshaller" />
            </bean>
         </list>
      </property>
      <property name="defaultContentType">
         <bean id="jsonMediaType" class="org.springframework.http.MediaType">
            <constructor-arg value="application" />
            <constructor-arg value="json" />
            <constructor-arg value="UTF-8" />
         </bean>
      </property>

      <property name="ignoreAcceptHeader" value="false" />
   </bean>

</beans>